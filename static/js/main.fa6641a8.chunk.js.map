{"version":3,"sources":["logo.svg","Book.js","Books.js","App.js","reportWebVitals.js","index.js"],"names":["Book","props","link","book","key","style","backgroundColor","bgColor","display","flexWrap","padding","margin","lineHeight","minWidth","cover_edition_key","src","marginLeft","className","fontSize","fontWeight","title","author_name","isbn","href","Books","useState","books","setBooks","query","setQuery","loading","setLoading","fetchBooks","searchTerm","a","trim","replace","fetch","response","json","results","docs","length","slice","console","log","type","value","onChange","e","target","onClick","map","i","App","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa6641a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Book = props => {\n    const link = `https://openlibrary.org${props.book.key}`;\n    return (\n        <div style={{backgroundColor: props.bgColor, display: \"flex\", flexWrap: \"wrap\", padding: \"10px\", margin:\"20px 0\", lineHeight: \"2rem\"}}>\n            <div style={{minWidth: \"200px\"}}>\n                { props.book.cover_edition_key ?\n                    <img src={`http://covers.openlibrary.org/b/olid/${props.book.cover_edition_key}-M.jpg`} /> :\n                    <p>(No cover image found)</p>\n                }\n            </div>\n            <div style={{marginLeft: \"20px\"}}>\n                <p className=\"title\" style={{fontSize:\"24px\", fontWeight: \"bold\"}}>{props.book.title}</p>\n                <p><span style={{fontWeight: \"bold\"}}>Author:</span> {props.book.author_name}</p>\n                <p><span style={{fontWeight: \"bold\"}}>ISBN:</span> {props.book.isbn ? props.book.isbn[0] : \"Cannot be found\"}</p>\n                <p><span style={{fontWeight: \"bold\"}}>Link: </span>\n                    <a href={link}>{link}</a></p>\n            </div>\n        </div>\n    );\n}\n\nexport default Book;","import { useState, useEffect } from \"react\";\nimport Book from \"./Book\";\n\nconst Books = props => {\n    const [books, setBooks] = useState([]);\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const fetchBooks = async (searchTerm) => {\n        searchTerm = searchTerm.trim().replace(/\\s\\s+/g, ' ');\n        if(searchTerm) {\n            setLoading(true);\n            const response = await fetch(`http://openlibrary.org/search.json?title=${searchTerm}`);\n            let results = await response.json();\n\n            // if there are less than 10 results, then slice accordingly\n            // otherwise, make a slice of 10 items\n            results = results.docs.length >= 10 ?\n                results.docs.slice(0, 10) :\n                results.docs.slice(0, results.docs.length);\n            setBooks(results);\n            setLoading(false);\n            console.log(results.length);\n        }\n    };\n\n    const setSearch = searchTerm => {\n        setQuery(searchTerm);\n    };\n\n    return (\n        <div style={{padding:'20px'}}>\n            <div className=\"searchSection\" style={{padding: \"10px\"}}>\n                <p>This application uses the experimental search API of <a href=\"https://openlibrary.org\">OpenLibrary</a></p>\n                <div className=\"searchForm\" style={{margin:\"20px 0\"}}>\n                    <input\n                        type=\"text\"\n                        value={query}\n                        onChange={(e) => setSearch(e.target.value)}\n                        style={{fontSize: \"24px\"}}\n                    />\n                    <button\n                        className='search-button'\n                        style={{fontSize:'1rem', padding:'10px', marginLeft: '10px'}}\n                        onClick={() => fetchBooks(query)}\n                    >\n                        Search\n                    </button>\n                </div>\n            </div>\n            { loading ? <p>Loading...</p> : books.map((book, i) => {\n                const bgColor = i % 2 === 0 ? \"#F5F5F5\" : \"white\";\n                console.log(bgColor);\n                return <Book book={book} key={book.key} bgColor={bgColor} />;\n            })}\n        </div>\n    )\n}\n\nexport default Books;","import logo from './logo.svg';\nimport './App.css';\nimport Books from './Books';\n\nfunction App() {\n  const headerStyle = {\n    backgroundColor: \"#E8E8E8\",\n    padding: \"20px\",\n    minHeight: \"100px\"\n  };\n\n  return (\n    <div>\n      <header style={headerStyle}>\n        <h1>Book Search</h1>\n        <h2>Powered by OpenLibrary API</h2>\n      </header>\n      <Books />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}